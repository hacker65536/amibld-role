version: 0.2


env:
  variables:
    INSTANCE_TYPE: "c4.large"
    PRIVATE_KEY_FILE: "ssh_private_key"
    PLAYBOOK_FILE: "site.yml"
    PLATFORM: "centos6"
    EBS_VOLUME_SIZE: "100"
phases:
  install:
    commands:
      - echo "$KEY_PAIR" > ssh_private_key && chmod 600 ssh_private_key
      - env 
  pre_build:
    commands:
      - curl -qSsL -o aws_credentials.json http://169.254.170.2/$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI > aws_credentials.json
      - aws configure set region $AWS_REGION
      - aws configure set aws_access_key_id $(jq -r '.AccessKeyId' aws_credentials.json)
      - aws configure set aws_secret_access_key $(jq -r '.SecretAccessKey' aws_credentials.json)
      - aws configure set aws_session_token $(jq -r '.Token' aws_credentials.json)
      - aws configure list
      - echo $ROLES
      - echo '[{"hosts":"all","become":"yes","roles":[]}]' | jq --argjson foo $(echo -n "${ROLES/%,/}" | jq -R -r -c 'split(",")') '.[].roles += $foo' | json2yaml > site.yml
      - cat site.yml

  build:
    commands:
      - |
        USER=${SSH_USERNAME} \
        packer build \
        -color=false \
        -var "AWS_REGION=$AWS_REGION" \
        -var "INSTANCE_TYPE=$INSTANCE_TYPE" \
        -var "SUBNET_ID=$SUBNET_ID" \
        -var "VPC_ID=$VPC_ID" \
        -var "KEY_PAIR_NAME=$KEY_PAIR_NAME" \
        -var "PRIVATE_KEY_FILE=$PRIVATE_KEY_FILE" \
        -var "USER_NAME=$USER_NAME" \
        -var "SECURITY_GROUP_ID=$SECURITY_GROUP_ID" \
        -var "SOURCE_AMI=$SOURCE_AMI" \
        -var "PLAYBOOK_FILE=$PLAYBOOK_FILE" \
        -var "PLATFORM=$PLATFORM" \
        -var "EBS_VOLUME_SIZE=$EBS_VOLUME_SIZE" \
        -var "COMMITID=$(echo ${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7})" \
        -var "SSH_INTERFACE=private_ip" \
        -var "SSH_USERNAME=$SSH_USERNAME" \
        -var "AMI_USERS=$AMI_USERS" \
        -var "AMI_REGIONS=$AMI_REGIONS" \
        -parallel=true \
        packer_"${PLATFORM}".json
  post_build:
    commands:
      - echo "post_build"


